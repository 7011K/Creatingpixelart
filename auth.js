// auth.js const GOOGLE_CLIENT_ID="341073342979-gfrpfpg3ag766tadn9rjnckrn7gd28sp.apps.googleusercontent.com";export let userEmail="";// Googleログインを初期化（必要ならスクリプトを読み込む） export function setupGoogleLogin(onLoginOK){if (!window.google || !window.google.accounts){const script=document.createElement('script');script.src="https://accounts.google.com/gsi/client";script.async=true;script.defer=true;document.head.appendChild(script);script.onload=()=>{initLogin(onLoginOK)}}else{initLogin(onLoginOK)}}// BANチェックAPIにPOSTして結果を取得 async function checkBanStatus(email){try{const response=await fetch("https://bancheckapicreatingpixelart.vercel.app/api/Creatingpixelartbancheckapi",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email})});const result=await response.json();console.log("BANチェック結果:",result);// BANされていなければメールアドレスを保持、されていれば空にする userEmail=result.email || ""}catch (error){console.error("BANチェック失敗:",error);userEmail="";// 念のため空にしておく}}// Googleログインの初期化とログイン開始 function initLogin(onLoginOK){google.accounts.id.initialize({client_id:GOOGLE_CLIENT_ID,callback:async (response)=>{try{const token=response.credential;const payload=JSON.parse(atob(token.split('.')[1]));const rawEmail=payload.email ? payload.email.toLowerCase():'';// BANチェックを実行 await checkBanStatus(rawEmail);// BANされていなければコールバック実行 if (typeof onLoginOK==="function") onLoginOK(userEmail)}catch (err){console.error("ログイン処理失敗:",err);userEmail="";if (typeof onLoginOK==="function") onLoginOK("")}},auto_select:false});// 純正ボタンは使わず、直接ログインを開始 google.accounts.id.prompt()}
